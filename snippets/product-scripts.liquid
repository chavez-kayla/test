{% comment %}
Construct two-dimensional array of variant metafields
{% endcomment %}
<script type="text/javascript">
  variant_metafields = [];
	{% assign metafield_namespaces = 'custom_fields' | split: ' ' %}
  {% for variant in product.variants %}
		variant_metafields[{{variant.id}}] = [];
		{% for namespace in metafield_namespaces %}
			{% for metafield in variant.metafields[namespace] %}
				{% assign key = metafield | first %}
				variant_metafields[{{variant.id}}]["{{key}}"] = "{{ variant.metafields[namespace][key] | escape | strip_newlines }}";
			{% endfor %}
		{% endfor %}
  {% endfor %}
</script>

{% comment %}
Provide functions for updating variants
{% endcomment %}
<script>
	function updateVariantMetafields(variant) {
		// Update each .variant_metafield with its .meta-[metafield] value
		$('.variant_metafield').each(function() {
			var classes = $(this).attr('class').split(' ');
			var element = $(this);
			meta_key = '';
			$.each(classes, function(index, value) {
				if( value.indexOf('meta-') !== -1 ) {
					meta_key = value.replace('meta-', '');
				}
			});
			//console.log(meta_key + ': ' + variant_metafields[variant.id][meta_key]);
			if( meta_key && variant_metafields[variant.id][meta_key] !== undefined && variant_metafields[variant.id][meta_key] !== "0" ) {
				var element_html = variant_metafields[variant.id][meta_key];
				if( variant_metafields[variant.id][meta_key].includes("&lt;") ) {
					element_html = $("<textarea/>").html(element_html).val();
				}
				element.html(element_html);
			} else {
				element.html('');
			}
		});
		
		// Now check each .spec to see if any have all .variant_metafields blank
		$('.spec').each(function() {
			var all_metafields_empty = true;
			if( $(this).find('.variant_metafield').length == 0 ) {
				//If no .variant_metafield classes exist in this element, do not hide it
				all_metafields_empty = false;
			} else {
				$(this).find('.variant_metafield').each(function() {
					if( ! $(this).is(':empty') ) {
						all_metafields_empty = false;
					}
				});
			}
			if(all_metafields_empty) {
				$(this).hide();
			} else {
				$(this).show();
			}
		});		
	}
</script>

<!-- Klaviyo -->
<script text="text/javascript">
  var _learnq = _learnq || [];
  var item = {
    Name: {{ product.title|json }},
    ProductID: {{ product.id|json }},
    Categories: {{ product.collections|map:'title'|json }},
    ImageURL: "https:{{ product.featured_image.src|img_url:'grande' }}",
    URL: "{{ shop.secure_url }}{{ product.url }}",
    Brand: {{ product.vendor|json }},
    Price: {{ product.price|money|json }},
    CompareAtPrice: {{ product.compare_at_price_max|money|json }}
  };
  _learnq.push(['track', 'Viewed Product', item]);
  _learnq.push(['trackViewedItem', {
    Title: item.Name,
    ItemId: item.ProductID,
    Categories: item.Categories,
    ImageUrl: item.ImageURL,
    Url: item.URL,
    Metadata: {
      Brand: item.Brand,
      Price: item.Price,
      CompareAtPrice: item.CompareAtPrice
    }
  }]);
</script>
<!-- End Klaviyo -->

{% if product.tags contains "Linked Options" %}
	{% render 'linked-options' %}
{% endif %}

<!-- Begin Shopify-Afterpay JavaScript Snippet (v1.0.10) -->
<script type="text/javascript">
// Overrides:
// var afterpay_min = 0.04;            // As per your Afterpay contract.
// var afterpay_max = 2000.00;         // As per your Afterpay contract.
// var afterpay_cbt_enabled = false;   // As per your Afterpay contract; change to true to display Cross-Border Trade artwork (for AU/NZ).
// var afterpay_logo_theme = 'colour'; // Can be 'colour', 'black' or 'white'.
var afterpay_product_selector = '.product-price';
// var afterpay_cart_integration_enabled = true;
// var afterpay_cart_static_selector = '#cart-subtotal-selector';
// Non-editable fields:
var afterpay_shop_currency = {{ shop.currency | json }};
var afterpay_cart_currency = {{ cart.currency.iso_code | json }};
var afterpay_shop_money_format = {{ shop.money_format | json }};
var afterpay_shop_permanent_domain = {{ shop.permanent_domain | json }};
var afterpay_theme_name = {{ theme.name | json }};
var afterpay_product = {{ product | json }};
var afterpay_current_variant = {{ product.selected_or_first_available_variant | json }};
var afterpay_cart_total_price = {{ cart.total_price | json }};
var afterpay_js_snippet_version = '1.0.10';
</script>
<script type="text/javascript" src="https://static.afterpay.com/shopify-afterpay-javascript.js"></script>
<!-- End Shopify-Afterpay JavaScript Snippet (v1.0.10) -->